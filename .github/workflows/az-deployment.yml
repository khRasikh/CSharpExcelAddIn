name: Build and deploy .NET Windows App

env:
  AZURE_WEBAPP_NAME: CSharpExcelAddIn
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: '5.0.x'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Log environment variables (Build)
        run: |
          echo "ðŸ”¹ DOTNET_VERSION = $env:DOTNET_VERSION"
          echo "ðŸ”¹ AZURE_WEBAPP_NAME = $env:AZURE_WEBAPP_NAME"
          echo "ðŸ”¹ AZURE_WEBAPP_PACKAGE_PATH = $env:AZURE_WEBAPP_PACKAGE_PATH"

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ./CSharpExcelAddIn/CSharpExcelAddIn.sln

      - name: Build (x86)
        run: dotnet build ./CSharpExcelAddIn/CSharpExcelAddIn.sln --configuration Release --runtime win-x86 --no-restore

      - name: Publish (x86)
        run: dotnet publish ./CSharpExcelAddIn/CSharpExcelAddIn.sln -c Release -r win-x86 --self-contained false -o $env:DOTNET_ROOT\myapp --no-restore

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: windows-app
          path: ${{ env.DOTNET_ROOT }}\myapp

  deploy:
    runs-on: windows-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-app

      - name: Log environment variables (Deploy)
        run: |
          echo "ðŸš€ Deployment logs:"
          echo "ðŸ”¹ AZURE_WEBAPP_NAME = $env:AZURE_WEBAPP_NAME"
          echo "ðŸ”¹ AZURE_WEBAPP_PACKAGE_PATH = $env:AZURE_WEBAPP_PACKAGE_PATH"
          echo "ðŸ”¹ DOTNET_VERSION = $env:DOTNET_VERSION"

      - name: Mock deploy step
        run: echo "âœ… Deployment skipped (mock run only)."
